# 보통의 코딩테스트에선 거의 나오지는 않는다
# 알고리즘대회에서 소수에 관한 문제중 거듭제곱 연산을 할일이 간혹 있다
# 그때 사용하는 용도라고! 
# 원리로는 오일러 함수(?)를 참고하라고 한다!


# python에서 고민할 문제는 아니다. 파이썬의 pow()를 사용하면 되기때문
# c/c++에서 사용하는 팁이다.

# 단순반복문으로 거듭제곱을 구현하는게 아니라
# a^11 = a^1 * a^2 * a^8 과 같은 방식을 이용한다. 
# 즉 11을 2진수로 분해한뒤 사용하는 것이다

# 그냥 일반 반복문으로 일일이 곱해서 하는거랑 거의 백만배 차이가 난다. us와 s의 차이.

# c/c++ style
def pow_advanced(a, b, mod):    # 아리송하네...-_- 
    ret = 1
    while b > 0:
        print("b",b)
        if b % 2: 
            print(a%mod)
            ret *= a%mod
        a = a*a%mod
        b //= 2
    return ret

# 세번째 인자를 넣어주면, 해당값에 대한 모듈러 결과를 리턴한다고...
print(pow_advanced(2,11,1000000007)) 
print(pow(2,11,1000000007)) # math라이브러리가 아니네! 
